unit repraceMacro;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, StdCtrls,
  ComCtrls, Buttons;

type

  { Treprace_unit }

  Treprace_unit = class(TForm)
    BitBtn1: TBitBtn;
    Button1: TButton;
    CheckBox1: TCheckBox;
    CheckBox2: TCheckBox;
    CheckBox3: TCheckBox;
    CheckBox4: TCheckBox;
    CheckBox5: TCheckBox;
    CheckBox6: TCheckBox;
    ComboBox1: TComboBox;
    Edit1: TEdit;
    Edit10: TEdit;
    Edit11: TEdit;
    Edit12: TEdit;
    Edit13: TEdit;
    Edit2: TEdit;
    Edit3: TEdit;
    Edit4: TEdit;
    Edit5: TEdit;
    Edit6: TEdit;
    Edit7: TEdit;
    Edit8: TEdit;
    Edit9: TEdit;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    UpDown1: TUpDown;
    procedure Button1Click(Sender: TObject);
    procedure ComboBox1Change(Sender: TObject);
    procedure ComboBox1DropDown(Sender: TObject);
    procedure FormActivate(Sender: TObject);
  private
    { private declarations }
    s,find,reprace:string;
    function checks(count:integer):boolean;
  public
    { public declarations }
  end;

var
  reprace_unit: Treprace_unit;

implementation

uses
  functionunit;
{$R *.lfm}

{ Treprace_unit }
function Treprace_unit.checks(count:integer):boolean;
begin
  if s = '先頭' then begin
    function_unit.Run(function_unit.reprace_macro(s,find,reprace,count));
  end;
  if s = '中間' then begin
    function_unit.Run(function_unit.reprace_macro(s,find,reprace,count));
  end;
  if s = '行末' then begin
    function_unit.Run(function_unit.reprace_macro(s,find,reprace,count));
  end;
  if s = '指定行' then begin
    function_unit.Run(function_unit.reprace_macro(s,find,reprace,count));
  end;
  if s = '全列全行' then begin
    function_unit.Run(function_unit.reprace_macro(s,find,reprace,count));
  end;
  if s = '指定列' then begin
    function_unit.Run(function_unit.reprace_macro(s,find,reprace,count));
  end;
end;

procedure Treprace_unit.ComboBox1Change(Sender: TObject);
var
  i,i1:integer;
  s1:string;
begin
  s1 := StringReplace(edit13.Text,',','',[{rfReplaceAll}]);
  function_unit.count_window := strtoint(s1);
  i1 := combobox1.ItemIndex;
  for i := 1 to 6 do begin
    if combobox1.Items[i1] = checkbox1.Caption then begin
      s := checkbox1.Caption;
      find := edit1.Text;
      reprace := edit7.Text;
    end;
    if combobox1.Items[i1] = checkbox2.Caption then begin
      s := checkbox2.Caption;
      find := edit2.Text;
      reprace := edit8.Text;
    end;
    if combobox1.Items[i1] = checkbox3.Caption then begin
      s := checkbox3.Caption;
      find := edit3.Text;
      reprace := edit9.Text;
    end;
    if combobox1.Items[i1] = checkbox4.Caption then begin
      s := checkbox4.Caption;
      find := edit4.Text;
      reprace := edit10.Text;
    end;
    if combobox1.Items[i1] = checkbox5.Caption then begin
      s := checkbox5.Caption;
      find := edit5.Text;
      reprace := edit11.Text;
    end;
    if combobox1.Items[i1] = checkbox6.Caption then begin
      s := checkbox6.Caption;
      find := edit6.Text;
      reprace := edit12.Text;
    end;
  end;
  checks(updown1.Position);
end;

procedure Treprace_unit.Button1Click(Sender: TObject);
begin
  checks(strtoint(edit13.Text));
end;

procedure Treprace_unit.ComboBox1DropDown(Sender: TObject);
begin
  combobox1.Items.Clear;
  if checkbox1.Checked then
    combobox1.Items.Add(checkbox1.Caption);
  if checkbox2.Checked then
    combobox1.Items.Add(checkbox2.Caption);
  if checkbox3.Checked then
    combobox1.Items.Add(checkbox3.Caption);
  if checkbox4.Checked then
    combobox1.Items.Add(checkbox4.Caption);
  if checkbox5.Checked then
    combobox1.Items.Add(checkbox5.Caption);
  if checkbox6.Checked then
    combobox1.Items.Add(checkbox6.Caption);
end;

procedure Treprace_unit.FormActivate(Sender: TObject);
begin

end;

end.

