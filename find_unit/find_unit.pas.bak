unit find_unit;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, StdCtrls,
  ComCtrls, Buttons;

type

  { Tfind_form }

  Tfind_form = class(TForm)
    BitBtn1: TBitBtn;
    FInds: TButton;
    FindsAll: TButton;
    ListBox1: TListBox;
    Rprece: TButton;
    RplaceAll: TButton;
    ChekChar: TCheckBox;
    FIndTextAlia: TComboBox;
    RplaceTextAlia: TComboBox;
    GroupBox1: TGroupBox;
    Label1: TLabel;
    Label2: TLabel;
    ListBox2: TListBox;
    Memo1: TMemo;
    TabControl1: TTabControl;
    procedure BitBtn1Click(Sender: TObject);
    procedure FIndsClick(Sender: TObject);
    procedure FindsAllClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: boolean);
    procedure RpreceClick(Sender: TObject);
    procedure RplaceAllClick(Sender: TObject);
    procedure FIndTextAliaKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure FIndTextAliaKeyUp(Sender: TObject; var Key: Word; Shift: TShiftState
      );
    procedure RplaceTextAliaKeyUp(Sender: TObject; var Key: Word; Shift: TShiftState
      );
    procedure FormClose(Sender: TObject; var CloseAction: TCloseAction);
    procedure FormCreate(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure ListBox2Click(Sender: TObject);
    procedure TabControl1Change(Sender: TObject);
    procedure TabControl1Changing(Sender: TObject; var AllowChange: Boolean);
  private
    { private declarations }
    tabclrsw:boolean;
  public
    { public declarations }
    //aList:array [0..255]of TStringList;
    //alist:TStringList;
    Listset:array[0..255] of TStringList;
    Listset2:array[0..255] of TStringList;
    function listclear:boolean;
    function list_set(i:integer;s:Tstringlist):boolean;
    function listload(i:integer):string;
    function listallload(i:integer):string;
    function find1page(i:integer;find_base,find_output:TStringlist):boolean;
    function findallpage():boolean;
    function Rpraceallpage():boolean;
    function selselect(Tabs:integer): boolean;
    function TXTReplace():boolean;
  end;

var
  find_form: Tfind_form;

implementation

uses function_unit, main, function_find;

{$R *.lfm}

{ Tfind_form }

function Tfind_form.find1page(i:integer;find_base,find_output:TStringlist):boolean;
var
  i1,i2,i3,i4,i5:integer;
  s,s1:string;
  sw :boolean;
  st1,st2,st3,st4:TStringList;
begin
  find_base.Text:= functionunit.editlist.Items[i].Edit.Text;

  st1 := TStringList.Create;
  st1.Clear;
  st2 := TStringList.Create;
  st2.Clear;
  st3 := TStringList.Create;
  st3.Clear;
  st4 := TStringList.Create;
  st4.Clear;
  if ChekChar.Checked then begin
    s1 := (FIndTextAlia.Text);
    st4.Text := (find_base.Text);
  end else begin
    s1 :=  LowerCase(FIndTextAlia.Text);
    st4.Text := LowerCase(find_base.Text);
  end;

  functionunit.findtext_test1(s1,st4,st1,0);
  functionunit.findtext_test2(s1,st4,st2,0);


  for i1 := 0 to st1.Count -1 do begin
    if (st1[i1] <> '0') or (st2[i1] <> '0') then
      st3.Add(inttostr(strtoint(st2[i1])+1) + '行' + (st1[i1]) + '文字目');
  end;
  functionunit.findtext(s1,st4,find_output,0);
  Listbox2.Items.Text:= st3.Text;
  TabControl1.Tabs.Add(
    mainform.PageControl1.Pages[i].Caption
  );
  //find_output.Text := st3.Text;
    st1.Free;
    st2.Free;
    st3.Free;
  //実験開始用フラグ＝true
  sw := not true;
  {if sw then begin
    //st1 := TStringList.Create;
    //st1.Clear;
    st2 := TStringList.Create;
    st2.Clear;
    //st3 := TStringList.Create;
    //st3.Clear;

     i5 :=0;
    for i2 := 0 to mainform.PageControl1.PageCount -2 do begin
      functionunit.new();

      for i3:= 0 to functionunit.editlist.Items[1].SynEdit1.Lines.Count -1 do begin
        functionunit.editlist.Items[functionunit.count_window-1].SynEdit1.Lines.Add(inttostr(i3));
      end;
      if i5 <= 8 then
        i5 := i2 + 2;
      for i4 := 0 to functionunit.editlist.Items[i5].SynEdit1.Lines.Count -1 do begin
        st1.Clear;
        st2.Clear;
        st3.Clear;
        s := functionunit.editlist.Items[i2+2].SynEdit1.Lines[i4];
        functionunit.findtext(s,find_base,st1,0);
        functionunit.findtext_test1(s,find_base,st2,0);
        //functionunit.findtext_test2(s,find_base,st2,0);
       { functionunit.editlist.Items[functionunit.count_window-1].SynEdit1.Lines[0] :=
          functionunit.editlist.Items[functionunit.count_window-1].SynEdit1.Lines[0] + ', "'+s+'"';
        for i1 := 1 to st2.Count -1 do begin
          functionunit.editlist.Items[functionunit.count_window-1].SynEdit1.Lines[i1] :=
          functionunit.editlist.Items[functionunit.count_window-1].SynEdit1.Lines[i1] +
          ' , ' + st2[i1];
        end;}
        //s := '0';
        for i1 := 0 to st1.Count -1 do begin
          st3.Add(((st1[i1]) + '行' + (st2[i1]) + '文字目'));
        end;{
        functionunit.editlist.Items[functionunit.count_window-1].SynEdit1.Lines[st2.Count -1] :=
        functionunit.editlist.Items[functionunit.count_window-1].SynEdit1.Lines[st2.Count -1] +
          ' , ' + s;}
      end;
    end;
    //functionunit.allsaveas();
    find_output.Text := st3.Text;}
    st1.Free;
    st2.Free;
    st3.Free;
    st4.Free;

end;

function Tfind_form.selselect(Tabs:integer): boolean;
var
  findpos:integer;
  i:integer;
begin
  i := tabs;
  //mainform.findpage := StrToInt(color_form.Memo1.Lines[tabset1.TabIndex]);
  if listbox2.ItemIndex = -1 then begin
    if listbox2.Items.Count > 0 then begin
      listbox2.ItemIndex := 0;
    end else begin
      exit;
    end;
  end;
  findpos := StrToInt(ListBox1.Items[listbox2.ItemIndex]);
  with functionunit.editlist.Items[mainform.PageControl1.PageIndex] do begin
    if PageControl1.ActivePage =  TabSheet1  then begin
      functionunit.editlist.Items[i].SynEdit1.SelStart := findpos;
      //functionunit.editlist.Items[i].SynEdit1.CaretY := functionunit.editlist.Items[i].SynEdit1.BlockBegin.y;
      //functionunit.editlist.Items[i].SynEdit1.CaretX := functionunit.editlist.Items[i].SynEdit1.BlockBegin.x;
      functionunit.editlist.Items[i].SynEdit1.selend := findpos + length(FIndTextAlia.Text);
    end else if PageControl1.ActivePage =  TabSheet2 then  begin
      functionunit.editlist.Items[i].memo1.SelStart := findpos -1;

      functionunit.editlist.Items[i].memo1.SelLength := length(FIndTextAlia.Text);
    end;
  end;
end;

function Tfind_form.TXTReplace():boolean;
var
  i,i1,ans:integer;
  msg:string;
  s1,s2:TStringList;
  all:boolean;
begin
  all := false;
  WindowState:= wsMinimized;
  i1 := mainform.PageControl1.ActivePageIndex;
  msg  := '文字列を置き換えます' + chr($d) + chr($a) + 'よろしいですか？';
  s1 := TStringList.Create;
  s2 := TStringList.Create;
  s1.Clear;
  s2.Clear;
        if functionunit.editlist.Items[i1].PageControl1.ActivePage =  functionunit.editlist.Items[i1].TabSheet1 then begin
          s1.Text := functionunit.editlist.Items[i1].SynEdit1.Text;
        end else if functionunit.editlist.Items[i1].PageControl1.ActivePage =  functionunit.editlist.Items[i1].TabSheet2 then begin
          s1.Text := functionunit.editlist.Items[i1].Memo1.Text;
        end;
  functionunit.findtext(FIndTextAlia.Text,s1,s2,0);
  Listbox1.Items.Text:= s2.Text;
  i := listbox1.ItemIndex;
  if (i < 0) and (listbox1.Items.Count > 0) then begin
    i := 0
  end;// else if i < listbox1.Items.Count then
    //exit;
  listbox1.ItemIndex := i;
  selselect(
      mainform.PageControl1.ActivePageIndex
    );
  while 0 <> ListBox1.Items.Count do begin
    if not all then begin
      ans := messagedlg(msg, mtinformation, [mbAll,mbOk,mbNo,mbCancel], 0);
    end;
    if ( not all ) and ( ans = 1 ) or ( all ) then begin
        selselect(i1);
        if functionunit.editlist.Items[i1].PageControl1.ActivePage =  functionunit.editlist.Items[i1].TabSheet1 then begin
          functionunit.editlist.Items[i1].SynEdit1.SelText:= RplaceTextAlia.Text;
          s1.Text := functionunit.editlist.Items[i1].SynEdit1.Text;
        end else if functionunit.editlist.Items[i1].PageControl1.ActivePage =  functionunit.editlist.Items[i1].TabSheet2 then begin
          functionunit.editlist.Items[i1].Memo1.SelText:= RplaceTextAlia.Text;
          s1.Text := functionunit.editlist.Items[i1].Memo1.Text;
        end;
         s2.Clear;

         functionunit.findtext(FIndTextAlia.Text,s1,s2,0);
         Listbox1.Items.Text:= s2.Text;
         listbox1.ItemIndex := i;

       end else if  ( not all ) and (  ans = 7 ) then begin
        inc(i);
        listbox1.ItemIndex := i;
       end else if ans = 8 then begin
        all := true;
      end else if  ( not all ) and ( ans = 2 ) then begin
        break;
      end;
  end;
  s1.Free;
  s2.Free;
  WindowState:= wsNormal;
  all := false;
end;


function Tfind_form.findallpage():boolean;
var
  i:integer;
  s1,s2:TStringList;
begin
  s1 := TStringList.Create;
  s1.Clear;
  s2 := TStringList.Create;
  s2.Clear;


  Memo1.Clear;
  for i := 0 to 255 do begin
    Listset[i].Clear;
  end;
  for i := 0 to mainform.PageControl1.PageCount -2 do begin
    s1.Clear;
    s2.Clear;
    s1.Text := functionunit.editlist.Items[i].Edit.Text;
    find1page(i,s1,s2);
    Listset[i].Text:= s2.Text;
    Listset2[i].Text:= ListBox2.Items.Text;
    Memo1.Lines.Add(inttostr(i));
    //chekfinds;
  end;
  TabControl1.TabIndex:= TabControl1.Tabs.Count -1;

end;

function Tfind_form.Rpraceallpage():boolean;
var
  i:integer;
  s1,s2:TStringList;
begin
  s1 := TStringList.Create;
  s1.Clear;
  s2 := TStringList.Create;
  s2.Clear;


  Memo1.Clear;
  for i := 0 to 255 do begin
    Listset[i].Clear;
  end;
  for i := 0 to mainform.PageControl1.PageCount -2 do begin
    s1.Clear;
    s2.Clear;
    s1.Text := functionunit.editlist.Items[i].Edit.Text;
    find1page(i,s1,s2);
    Listset[i].Text:= s2.Text;
    Listset2[i].Text:= ListBox2.Items.Text;
    Memo1.Lines.Add(inttostr(i));
    RpreceClick(Rprece);
    //chekfinds;
  end;
  TabControl1.TabIndex:= TabControl1.Tabs.Count -1;

end;


function Tfind_form.listclear:boolean;
var
  i:integer;
begin
  for i := 0 to 255 do begin
    //if function_unit.Listset[i] <> nil then
      //function_unit.Listset[i] := TStringList.Create;
    //function_unit.Listset[i].Clear;
    //find_form.alist[i].Free;
    //new(aList[i]);
    //find_form.aList := TStringList.Create;
    //find_form.alist[i].Clear;
  end;
end;

function listclear2:boolean;
var
  i:integer;
begin
  for i := 0 to 255 do begin
    //if function_unit.Listset[i] <> nil then
      //function_unit.Listset[i] := TStringList.Create;
    //function_unit.Listset[i].Clear;
    //find_form.alist[i].Free;
    //new(aList[i]);
    //find_form.aList := TStringList.Create;
    //find_form.alist[i].Clear;
  end;
end;

function Tfind_form.list_set(i:integer;s:TstringList):boolean;
var
  alist:TStringList;
begin
  aList := TStringList.Create;
  alist.Clear;
  aList.Text:= s.Text;
  aList.SaveToFile(
        ExtractFilePath( Paramstr(0) ) +
          {ExtractFileName} inttostr(i) + '.lst'
          );
  alist.Free;
end;

function Tfind_form.listload(i:integer):string;
var
  alist:TStringList;
begin
  aList := TStringList.Create;
  aList.LoadFromFile(
        ExtractFilePath( Paramstr(0) ) +
          {ExtractFileName} inttostr(i) + '.lst'
          );
  //function_unit.Listset[i].Text:= alist.Text;
  listload := aList[i];
  alist.Free;
end;

function Tfind_form.listallload(i:integer):string;
var
  alist:TStringList;
begin
  aList := TStringList.Create;
  aList.LoadFromFile(
        ExtractFilePath( Paramstr(0) ) +
          {ExtractFileName} inttostr(i) + '.lst'
          );
  listallload := aList.Text;
  alist.Free;
end;

function listfree:boolean;
//var
  //i:integer;
begin
  //for i := 0 to 255 do begin
   // alist.Free;
  //end;
end;

procedure Tfind_form.FIndsClick(Sender: TObject);
var
  st1,st2:TStringList;
begin
  st1 := TStringList.Create;
  st2 := TStringList.Create;
  st1.Clear;
  st2.Clear;
  TabControl1.Tabs.Clear;
  Memo1.Clear;
  TabControl1.Tabs.Clear;
  ListBox1.Items.Clear;

  st1.Text := functionunit.editlist.Items[mainform.PageControl1.ActivePageIndex].Edit.Text;
  find1page(mainform.PageControl1.ActivePageIndex,st1,st2);
  ListBox1.Items.Text:= st2.Text;
  //st2.Clear;
  //st1.Clear;
  //exit;
  //functionunit.find1page(MainForm.TabControl1.TabIndex);
  //functionunit.chekfinds;
  if -1 < FIndTextAlia.Items.IndexOf(FIndTextAlia.Text) then
    FIndTextAlia.Items.Add(FIndTextAlia.Text);
end;

procedure Tfind_form.BitBtn1Click(Sender: TObject);
begin

end;

procedure Tfind_form.FindsAllClick(Sender: TObject);
begin
  listclear2;
  Memo1.Clear;
  tabclrsw := true;
  TabControl1.Tabs.Clear;
  ListBox1.Items.Clear;
  //MainForm.MenuItem62Click(MainForm.MenuItem62);
  findallpage;
  if -1 < RplaceTextAlia.Items.IndexOf(RplaceTextAlia.Text) then
    RplaceTextAlia.Items.Add(RplaceTextAlia.Text);
end;

procedure Tfind_form.FormActivate(Sender: TObject);
begin
  //functionunit.mainformactive;
end;

procedure Tfind_form.FormCloseQuery(Sender: TObject; var CanClose: boolean);
var
  i:integer;
begin
    listclear;
  for i := 0 to 255 do begin
    Listset[i].Free;
  end;
    listfree;
end;

procedure Tfind_form.RpreceClick(Sender: TObject);
begin
  if -1 = RplaceTextAlia.Items.IndexOf(RplaceTextAlia.Text) then
    RplaceTextAlia.Items.Add(RplaceTextAlia.Text);
  FIndsClick(Sender);
  TXTReplace;
end;

procedure Tfind_form.RplaceAllClick(Sender: TObject);
var
  i:integer;
begin
  if -1 = RplaceTextAlia.Items.IndexOf(RplaceTextAlia.Text) then
    RplaceTextAlia.Items.Add(RplaceTextAlia.Text);
  FIndsAllClick(FIndsAll);
  for i := 0 to TabControl1.Tabs.Count -1 do begin
    TabControl1.TabIndex := i;
    TabControl1Change(TabControl1);
    if listbox2.Count > 0 then begin
      listbox2.ItemIndex:= 0;
      TXTReplace;
    end;

  end;
end;

procedure Tfind_form.FIndTextAliaKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin

end;

procedure Tfind_form.FIndTextAliaKeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  i,i1,i2:integer;
  clist:TStringlist;
begin
  //find_form.ComboBox1.AutoDropDown:= false;
  {clist := Tstringlist.Create;
  FormShow(Sender);
  clist.Text := FIndTextAlia.Items.Text;
  if FIndTextAlia.Text = '' then
    exit;
  i := 0;
  i2 := 0;
  for i := 0 to clist.Count -1 do begin
    i1 := ansipos(FIndTextAlia.Text,clist[i2]);
    if i1 <> 0 then begin
      inc(i2);
    end else begin
      clist.Delete(i2);
    end;
  end;
  FIndTextAlia.Items.Text := clist.Text;
  clist.Free;
  if key = word(13) then
    if not FIndTextAlia.DroppedDown then
      FIndTextAlia.DroppedDown:= true;  }
end;

procedure Tfind_form.RplaceTextAliaKeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  i,i1,i2:integer;
  clist:TStringlist;
begin
  {clist := Tstringlist.Create;
  FormShow(Sender);
  clist.Text := RplaceTextAlia.Items.Text;
  if RplaceTextAlia.Text = '' then
    exit;
  i := 0;
  i2 := 0;
  for i := 0 to clist.Count -1 do begin
    i1 := ansipos(RplaceTextAlia.Text,clist[i2]);
    if i1 <> 0 then begin
      inc(i2);
    end else begin
      clist.Delete(i2);
    end;
  end;
  RplaceTextAlia.Items.Text := clist.Text;
  clist.Free;
  if key = word(13) then
    if not RplaceTextAlia.DroppedDown then
      RplaceTextAlia.DroppedDown:= true; }
end;

procedure Tfind_form.FormClose(Sender: TObject; var CloseAction: TCloseAction);
begin

end;

procedure Tfind_form.FormCreate(Sender: TObject);
var
  i:integer;
begin
    //listclear;
  for i := 0 to 255 do begin
    Listset[i] := TStringList.Create;
    Listset[i].Clear;
    Listset2[i] := TStringList.Create;
    Listset2[i].Clear;
  end;
end;

procedure Tfind_form.FormShow(Sender: TObject);
var
  st:TStringlist;
  i:integer;
begin
  st:=TStringlist.Create;

  try
    st.LoadFromFile(utf8toansi(ansitoutf8(extractfilepath(paramstr(0)) + 'findwordlist.txt')));
  except

  end;
    for i := 0 to st.Count -1 do begin
      FIndTextAlia.Items.Add(st[i]);
    end;
    st.Free;
    RplaceTextAlia.Items.Text:= FIndTextAlia.Items.Text;
end;

procedure Tfind_form.ListBox2Click(Sender: TObject);
begin
  if ListBox1.Items.Count = 0 then
    exit;
  selselect(
    mainform.PageControl1.ActivePageIndex
  );
end;

procedure Tfind_form.TabControl1Change(Sender: TObject);
begin
  if tabclrsw then begin
    tabclrsw := false;
    exit;
  end;
  mainform.PageControl1.PageIndex := strtoint(Memo1.Lines[TabControl1.TabIndex]);
  ListBox1.Items.Text:= listset[strtoint(memo1.Lines[TabControl1.TabIndex])].Text;
  ListBox2.Items.Text:= listset2[strtoint(memo1.Lines[TabControl1.TabIndex])].Text;
end;

procedure Tfind_form.TabControl1Changing(Sender: TObject; var AllowChange: Boolean);
begin

end;

end.

